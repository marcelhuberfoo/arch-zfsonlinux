# Maintainer: Marcel Huber <marcelhuberfoo at gmail dot com>
# Contributor: Jesus Alvarez <jeezusjr at gmail dot com>
# Contributor: Kyle Fuller <inbox at kylefuller dot co dot uk>

pkgname=zfs-utilities-git
pkgver=0.7.0.rc2.60.g5f20c14
_pkgverspl=0.7.0.rc2.3.g4934925
pkgrel=1
pkgdesc='Zettabyte File System management utilities.'
arch=(i686 x86_64)
groups=(zfsonlinux)
makedepends=(gcc make autoconf automake git)
depends=(spl-utilities-git=$_pkgverspl zfs-kmod-dkms-git=$pkgver)
provides=(zfs)
conflicts=(zfs-utils zfs-utils-therp zfs-utils-therp-git zfs-utilities)
url='http://zfsonlinux.org/'
license=(CDDL)
source=($pkgname::git+git://github.com/zfsonlinux/zfs.git
        git+git://github.com/zfsonlinux/spl.git
        zfs-utilities.bash-completion
        zfs-utilities.initcpio.install
        zfs-utilities.initcpio.hook)
sha256sums=('SKIP'
            'SKIP'
            'b60214f70ffffb62ffe489cbfabd2e069d14ed2a391fac0e36f914238394b540'
            '8190b69853d9670c6aaf1d14c674598a14c58f8ec359e249a1c3010c0b39d074'
            '080d7efa5beb3140b0bf69fb0d8944d27a3b543565da23febbc11f3ee789748f')

pkgver() {
  cd "$srcdir/$pkgname" 2>/dev/null && (
  # update dependent projects revision information
  local dummy=$(pkgver_spl)
  if GITTAG="$(git describe --abbrev=0 --tags 2>/dev/null)"; then
    local _revs_ahead_tag=$(git rev-list --count ${GITTAG}..)
    local _commit_id_short=$(git log -1 --format=%h)
    echo $(sed -e s/^${pkgname%%-git}// -e 's/^[-_/a-zA-Z]\+//' -e 's/[-_+]/./g' <<< ${GITTAG}).${_revs_ahead_tag}.g${_commit_id_short}
  else
    echo 0.$(git rev-list --count master).g$(git log -1 --format=%h)
  fi
  ) || echo $pkgver
}

pkgver_spl() {
  cd "$srcdir/spl"
  local _splver=""
  if GITTAG="$(git describe --abbrev=0 --tags 2>/dev/null)"; then
    local _revs_ahead_tag=$(git rev-list --count ${GITTAG}..)
    local _commit_id_short=$(git log -1 --format=%h)
    _splver="$(echo $(sed -e 's/^spl//' -e 's/^[-_/a-zA-Z]\+//' -e 's/[-_+]/./g' <<< ${GITTAG}).${_revs_ahead_tag}.g${_commit_id_short} )"
  else
    _splver="$(echo 0.$(git rev-list --count master).g$(git log -1 --format=\"%h\") )"
  fi
  # code copied over from makepkg
  if [[ -n $_splver && $_splver != "$_pkgverspl" ]]; then
    if [[ -f $BUILDFILE && -w $BUILDFILE ]]; then
      sed --follow-symlinks -i "s/^_pkgverspl=[^ ]*/_pkgverspl=$_splver/" "$BUILDFILE"
    fi
  fi
  echo $_splver
}

# $1 version, $2 file
_my_replace_META_Version() {
  local _gitver="${1}"
  local _filename="${2}"
  # replace Version: and Release: in META files
  local _version=$(echo $_gitver | sed 's|\.[0-9]*\.[0-9a-fg]*$||')
  local _release=$(echo $_gitver | sed -r 's|^.*\.([0-9]*\.[0-9a-fg]*)$|\1|')
  sed -i -r -e "/^Version:/ { s/^([^0-9]*)[0-9.]+\$/\1$_version/ }" "$_filename"
  sed -i -r -e "/^Release:/ { s/^([^0-9r]*)[0-9a-fgr.]+\$/\1$_release/ }" "$_filename"
}

prepare() {
  cd "$srcdir/spl"
  git clean -dxf 2>/dev/null
  git reset --hard 2>/dev/null
  cd "$srcdir/$pkgname"
  git clean -dxf 2>/dev/null
  git reset --hard 2>/dev/null
  _my_replace_META_Version "$(pkgver)" "$srcdir/$pkgname/META"
  _my_replace_META_Version "$(pkgver_spl)" "$srcdir/spl/META"
}

build() {
  cd "$srcdir/$pkgname"
  ./autogen.sh
  ./configure --prefix=/usr \
              --sysconfdir=/etc \
              --sbindir=/usr/bin \
              --libdir=/usr/lib \
              --datadir=/usr/share \
              --includedir=/usr/include \
              --with-udevdir=/lib/udev \
              --libexecdir=/usr/lib/zfs-${pkgver} \
              --with-config=user
  make
}

package() {
  cd "$srcdir/$pkgname"
  make DESTDIR="$pkgdir" install

  # Remove uneeded files
  rm -r "$pkgdir"/etc/init.d
  rm -r "$pkgdir"/usr/lib/dracut

  # move module tree /lib -> /usr/lib
  cp -r "$pkgdir"/{lib,usr}
  cp "$pkgdir"/sbin/* "$pkgdir"/usr/bin/
  rm -r "$pkgdir"/{lib,sbin}

  install -D -m644 "${srcdir}/zfs-utilities.initcpio.hook" "$pkgdir/usr/lib/initcpio/hooks/zfs"
  install -D -m644 "${srcdir}/zfs-utilities.initcpio.install" "$pkgdir/usr/lib/initcpio/install/zfs"
  install -D -m644 "${srcdir}/zfs-utilities.bash-completion" "$pkgdir/usr/share/bash-completion/completions/zfs"
}

# vim:set ts=2 sw=2 et:
